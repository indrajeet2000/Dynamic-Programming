class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int target) {
        int n=nums.size();
        int sum=accumulate(nums.begin(),nums.end(),0);
        
        if(((sum - target) % 2 == 1) || (target > sum)) //edge-case
            return 0;
        
        int s1 = abs(sum+target)/2;
        
        vector<vector<int>> dp(n+1,vector<int>(s1+1));
        
        for(int i=0;i<=n;i++)
            dp[i][0]=1;
        for(int i=1;i<=s1;i++)
            dp[0][i]=0;
        
        for(int i=1;i<n+1;i++)
        {
            for(int j=0;j<s1+1;j++)
            {
                if(nums[i-1]<=j) dp[i][j]=dp[i-1][j-nums[i-1]] + dp[i-1][j];
                
                else dp[i][j]=dp[i-1][j];
            }
        }
        
        return dp[n][s1];
        
    }
};
